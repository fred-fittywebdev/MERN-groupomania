{"ast":null,"code":"var _jsxFileName = \"/home/fred/Vid\\xE9os/MERN-groupomania/client/src/components/Posts/Post/Post.js\";\nimport React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, Paper, Divider } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst Post = ({\n  post,\n  setCurrentId\n}) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find(like => {\n        var _user$result;\n\n        return like === (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result._id);\n      }) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }), \"\\xA0\", post.likes.length > 2 ? `Vous et ${post.likes.length - 1} autres` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }), \"\\xA0\", post.likes.length, \" \", post.likes.length === 1 ? 'Like' : 'Likes');\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ThumbUpAltOutlined, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }\n    }), \"\\xA0Like\");\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Card className={classes.card}>\n    //   <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n    //   <div className={classes.overlay}>\n    //     <Typography variant=\"h6\">{post.name}</Typography>\n    //     <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n    //   </div>\n    //   {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator || user?.result?.role === 'admin') && (\n    //     <div className={classes.overlay2}>\n    //       <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n    //         <MoreHorizIcon fontSize=\"default\" />\n    //       </Button>\n    //     </div>\n    //   )}\n    //   <div className={classes.details}>\n    //     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n    //   </div>\n    //   <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n    //   <CardContent>\n    //     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n    //   </CardContent>\n    //   <CardActions className={classes.cardActions}>\n    //     <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\n    //       <Likes />\n    //     </Button>\n    //     {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator || user?.result?.role === 'admin') && (\n    //       <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n    //         <DeleteIcon fontSize=\"small\" /> Supprimer\n    //       </Button>\n    //     )}\n    //   </CardActions>\n    // </Card>\n    React.createElement(Paper, {\n      style: {\n        padding: '20px',\n        borderRadius: '15px'\n      },\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, post.title), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      color: \"textSecondary\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, post.tags.map(tag => /*#__PURE__*/React.createElement(Link, {\n      to: `/tags/${tag}`,\n      style: {\n        textDecoration: 'none',\n        color: '#3f51b5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, ` #${tag} `))), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"body1\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, post.message), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"Created by:\", /*#__PURE__*/React.createElement(Link, {\n      to: `/creators/${post.name}`,\n      style: {\n        textDecoration: 'none',\n        color: '#3f51b5'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, ` ${post.name}`)), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, moment(post.createdAt).fromNow()), /*#__PURE__*/React.createElement(Divider, {\n      style: {\n        margin: '20px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 39\n      }\n    }, \"Realtime Chat - coming soon!\")), /*#__PURE__*/React.createElement(Divider, {\n      style: {\n        margin: '20px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CommentSection, {\n      post: post,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      style: {\n        margin: '20px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.imageSection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.media,\n      src: post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n      alt: post.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }))), !!recommendedPosts.length && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"You might also like:\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.recommendedPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, recommendedPosts.map(({\n      title,\n      name,\n      message,\n      likes,\n      selectedFile,\n      _id\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '20px',\n        cursor: 'pointer'\n      },\n      onClick: () => openPost(_id),\n      key: _id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, name), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, message), /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Likes: \", likes.length), /*#__PURE__*/React.createElement(\"img\", {\n      src: selectedFile,\n      width: \"200px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }))))))\n  );\n};\n\nexport default Post;","map":{"version":3,"sources":["/home/fred/Vidéos/MERN-groupomania/client/src/components/Posts/Post/Post.js"],"names":["React","Card","CardActions","CardContent","CardMedia","Button","Typography","Paper","Divider","ThumbUpAltIcon","DeleteIcon","MoreHorizIcon","ThumbUpAltOutlined","useDispatch","moment","likePost","deletePost","useStyles","Post","post","setCurrentId","dispatch","classes","user","JSON","parse","localStorage","getItem","Likes","likes","length","find","like","result","_id","padding","borderRadius","card","section","title","tags","map","tag","textDecoration","color","message","name","createdAt","fromNow","margin","imageSection","media","selectedFile","recommendedPosts","cursor","openPost"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, Paper, Divider } from '@material-ui/core/';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\n\nimport { likePost, deletePost } from '../../../actions/posts';\nimport useStyles from './styles';\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  const Likes = () => {\n    if (post.likes.length > 0) {\n      return post.likes.find((like) => like === user?.result?._id)\n        ? (\n          <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `Vous et ${post.likes.length - 1} autres` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}`}</>\n        ) : (\n          <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\n        );\n    }\n\n    return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\n  };\n\n  return (\n    // <Card className={classes.card}>\n    //   <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n    //   <div className={classes.overlay}>\n    //     <Typography variant=\"h6\">{post.name}</Typography>\n    //     <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n    //   </div>\n    //   {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator || user?.result?.role === 'admin') && (\n    //     <div className={classes.overlay2}>\n    //       <Button onClick={() => setCurrentId(post._id)} style={{ color: 'white' }} size=\"small\">\n    //         <MoreHorizIcon fontSize=\"default\" />\n    //       </Button>\n    //     </div>\n    //   )}\n    //   <div className={classes.details}>\n    //     <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n    //   </div>\n    //   <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n    //   <CardContent>\n    //     <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n    //   </CardContent>\n    //   <CardActions className={classes.cardActions}>\n    //     <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\n    //       <Likes />\n    //     </Button>\n    //     {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator || user?.result?.role === 'admin') && (\n    //       <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\n    //         <DeleteIcon fontSize=\"small\" /> Supprimer\n    //       </Button>\n    //     )}\n    //   </CardActions>\n    // </Card>\n    <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => (\n            <Link to={`/tags/${tag}`} style={{ textDecoration: 'none', color: '#3f51b5' }}>\n              {` #${tag} `}\n            </Link>\n          ))}\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n          <Typography variant=\"h6\">\n            Created by:\n            <Link to={`/creators/${post.name}`} style={{ textDecoration: 'none', color: '#3f51b5' }}>\n              {` ${post.name}`}\n            </Link>\n          </Typography>\n          <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <Typography variant=\"body1\"><strong>Realtime Chat - coming soon!</strong></Typography>\n          <Divider style={{ margin: '20px 0' }} />\n          <CommentSection post={post} />\n          <Divider style={{ margin: '20px 0' }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n        </div>\n      </div>\n      {!!recommendedPosts.length && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\n              <div style={{ margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\n                <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n                <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                <img src={selectedFile} width=\"200px\" />\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}